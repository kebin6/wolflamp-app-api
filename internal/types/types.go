// Code generated by goctl. DO NOT EDIT.
package types

// The basic response with data | 基础带数据信息
// swagger:model BaseDataInfo
type BaseDataInfo struct {
	// Error code | 错误代码
	Code int `json:"code"`
	// Message | 提示信息
	Msg string `json:"msg"`
	// Data | 数据
	Data string `json:"data,omitempty"`
}

// The basic response with data | 基础带数据信息
// swagger:model BaseListInfo
type BaseListInfo struct {
	// The total number of data | 数据总数
	Total uint64 `json:"total"`
	// Data | 数据
	Data string `json:"data,omitempty"`
}

// The basic response without data | 基础不带数据信息
// swagger:model BaseMsgResp
type BaseMsgResp struct {
	// Error code | 错误代码
	Code int `json:"code"`
	// Message | 提示信息
	Msg string `json:"msg"`
}

// The page request parameters | 列表请求参数
// swagger:model PageInfo
type PageInfo struct {
	// Page number | 第几页
	// required : true
	// min : 0
	Page uint64 `json:"page" validate:"required,number,gt=0"`
	// Page size | 单页数据行数
	// required : true
	// max : 100000
	PageSize uint64 `json:"pageSize" validate:"required,number,lt=100000"`
}

// Basic ID request | 基础ID参数请求
// swagger:model IDReq
type IDReq struct {
	// ID
	// Required: true
	Id uint64 `json:"id" validate:"number"`
}

// Basic IDs request | 基础ID数组参数请求
// swagger:model IDsReq
type IDsReq struct {
	// IDs
	// Required: true
	Ids []uint64 `json:"ids"`
}

// Basic ID request | 基础ID地址参数请求
// swagger:model IDPathReq
type IDPathReq struct {
	// ID
	// Required: true
	Id uint64 `path:"id"`
}

// Basic ID request (int32) | 基础ID参数请求 (int32)
// swagger:model IDInt32Req
type IDInt32Req struct {
	// ID
	// Required: true
	Id int32 `json:"id" validate:"number"`
}

// Basic IDs request (int32) | 基础ID数组参数请求 (int32)
// swagger:model IDsInt32Req
type IDsInt32Req struct {
	// IDs
	// Required: true
	Ids []int32 `json:"ids"`
}

// Basic ID request (int32) | 基础ID地址参数请求 (int32)
// swagger:model IDInt32PathReq
type IDInt32PathReq struct {
	// ID
	// Required: true
	Id int32 `path:"id"`
}

// Basic ID request (uint32) | 基础ID参数请求 (uint32)
// swagger:model IDUint32Req
type IDUint32Req struct {
	// ID
	// Required: true
	Id uint32 `json:"id" validate:"number"`
}

// Basic IDs request (uint32) | 基础ID数组参数请求 (uint32)
// swagger:model IDsUint32Req
type IDsUint32Req struct {
	// IDs
	// Required: true
	Ids []uint32 `json:"ids"`
}

// Basic ID request (uint32) | 基础ID地址参数请求 (uint32)
// swagger:model IDUint32PathReq
type IDUint32PathReq struct {
	// ID
	// Required: true
	Id uint32 `path:"id"`
}

// Basic ID request (int64) | 基础ID参数请求 (int64)
// swagger:model IDInt64Req
type IDInt64Req struct {
	// ID
	// Required: true
	Id int64 `json:"id" validate:"number"`
}

// Basic IDs request (int64) | 基础ID数组参数请求 (int64)
// swagger:model IDsInt64Req
type IDsInt64Req struct {
	// IDs
	// Required: true
	Ids []int64 `json:"ids"`
}

// Basic ID request (int64) | 基础ID地址参数请求 (int64)
// swagger:model IDInt64PathReq
type IDInt64PathReq struct {
	// ID
	// Required: true
	Id int64 `path:"id"`
}

// Basic UUID request in path | 基础UUID地址参数请求
// swagger:model UUIDPathReq
type UUIDPathReq struct {
	// ID
	// Required: true
	Id string `path:"id"`
}

// Basic UUID request | 基础UUID参数请求
// swagger:model UUIDReq
type UUIDReq struct {
	// ID
	// required : true
	// max length : 36
	// min length : 36
	Id string `json:"id" validate:"required,len=36"`
}

// Basic UUID array request | 基础UUID数组参数请求
// swagger:model UUIDsReq
type UUIDsReq struct {
	// Ids
	// Required: true
	Ids []string `json:"ids"`
}

// The base ID response data | 基础ID信息
// swagger:model BaseIDInfo
type BaseIDInfo struct {
	// ID
	Id *uint64 `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

// The base ID response data (int64) | 基础ID信息 (int64)
// swagger:model BaseIDInt64Info
type BaseIDInt64Info struct {
	// ID
	Id *int64 `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

// The base ID response data (int32) | 基础ID信息 (int32)
// swagger:model BaseIDInt32Info
type BaseIDInt32Info struct {
	// ID
	Id *int32 `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

// The base ID response data (uint32) | 基础ID信息 (uint32)
// swagger:model BaseIDUint32Info
type BaseIDUint32Info struct {
	// ID
	Id *uint32 `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

// The base UUID response data | 基础UUID信息
// swagger:model BaseUUIDInfo
type BaseUUIDInfo struct {
	// ID
	Id *string `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

// 验证码请求体
// swagger:model CaptchaReq
type CaptchaReq struct {
	// required : true
	// max length : 100
	Email string `json:"email" validate:"required,email,max=100"`
}

// 玩家信息
// swagger:model PlayerInfo
type PlayerInfo struct {
	// 玩家ID
	Id uint64 `json:"id"`
	// 邮箱
	Email string `json:"email"`
	// 邀请码
	InviteCode string `json:"inviteCode"`
	// 币剩余量
	Amount float64 `json:"amount"`
	// 羊剩余量
	Lamp float32 `json:"lamb"`
	// 代理等级
	Rank uint32 `json:"rank"`
}

// 登陆信息
// swagger:model LoginInfo
type LoginInfo struct {
	// 玩家信息
	Info PlayerInfo `json:"info"`
	// 登陆token
	Token string `json:"token"`
}

// 注册接口请求体
// swagger:model RegisterReq
type RegisterReq struct {
	// 邮箱
	// required : true
	// max length : 100
	Email string `json:"email" validate:"required,email,max=100"`
	// 密码
	// required : true
	// max length : 30
	// min length : 6
	Password string `json:"password" validate:"required,max=30,min=6"`
	// 验证码
	// required : true
	// max length : 6
	// min length : 6
	CaptchaCode string `json:"captchaCode" validate:"required,len=6"`
	// 邀请码
	// required : true
	// max length : 7
	// min length : 7
	InvitedCode string `json:"invitedCode" validate:"required,len=7"`
}

// 登陆接口请求体
// swagger:model LoginReq
type LoginReq struct {
	// 邮箱
	// required : true
	// max length : 100
	Email string `json:"email" validate:"required,email,max=100"`
	// 密码
	// required : true
	// max length : 30
	// min length : 6
	Password string `json:"password" validate:"required,max=30,min=6"`
}

// 登陆接口响应体
// swagger:model LoginResp
type LoginResp struct {
	BaseDataInfo
	// 登陆信息
	Data LoginInfo `json:"data"`
}

// 个人信息接口响应体
// swagger:model PersonInfoResp
type PersonInfoResp struct {
	BaseDataInfo
	// 个人信息
	Data PlayerInfo `json:"data"`
}

// 修改密码接口请求体
// swagger:model ChangePasswordReq
type ChangePasswordReq struct {
	// 邮箱
	// required : true
	// max length : 100
	Email string `json:"email" validate:"required,email,max=100"`
	// 旧密码
	// required : true
	OldPassword string `json:"oldPassword" validate:"required"`
	// 新密码
	// required : true
	// max length : 30
	// min length : 6
	NewPassword string `json:"newPassword" validate:"required,max=30,min=6"`
	// 验证码
	// required : true
	// max length : 6
	// min length : 6
	CaptchaCode string `json:"captchaCode" validate:"required,len=6"`
}

// swagger:model ShareResp
type ShareResp struct {
	BaseDataInfo
	//QrCodeSource string `json:"qr_code_source"`
	// 分享链接
	Data string `json:"data"`
}

// 校验交易密码请求体
// swagger:model VerifyTransactionPasswordReq
type VerifyTransactionPasswordReq struct {
	// 旧密码
	// required : true
	// max length : 6
	// min length : 6
	OldPassword string `json:"oldPassword" validate:"required,len=6"`
}

// 设置交易密码请求体
// swagger:model TransactionPasswordReq
type TransactionPasswordReq struct {
	// 旧密码（首次设置则与新密码一致）
	// required : true
	// max length : 6
	// min length : 6
	OldPassword string `json:"oldPassword" validate:"required,len=6"`
	// 新密码
	// required : true
	// max length : 6
	// min length : 6
	NewPassword string `json:"newPassword" validate:"required,len=6"`
}

// 提币请求体
// swagger:model WithdrawReq
type WithdrawReq struct {
	// 交易密码
	// required : true
	// max length : 6
	// min length : 6
	Password string `json:"password" validate:"required,len=6"`
	// 提币汇入地址
	// required : true
	WithdrawAddress string `json:"withdrawAddress" validate:"required"`
	// 提币数量
	// required : true
	Amount float64 `json:"amount" validate:"required"`
}

// swagger:model WithdrawResp
type WithdrawResp struct {
	BaseDataInfo
	// 提币ID
	Data uint64 `json:"data"`
}

// 钱包详情
// swagger:model WalletInfo
type WalletInfo struct {
	// 交易密码是否初始化: 1=是；2=否
	IsInit uint32 `json:"isInit"`
	// 账户余额
	Balance float64 `json:"balance"`
	// 羊剩余量
	Lamp float32 `json:"lamb"`
	// 累计总奖励
	TotalReward float64 `json:"totalReward"`
	// 今日奖励
	TodayReward float64 `json:"todayReward"`
	// 网络
	Network string `json:"network"`
	// 充值账号地址
	DepositAddress string `json:"depositAddress"`
}

// swagger:model WalletResp
type WalletResp struct {
	BaseDataInfo
	// 钱包详情
	Data WalletInfo `json:"data"`
}

// 预算提币请求体
// swagger:model EstimateWithdrawReq
type EstimateWithdrawReq struct {
	// 提币数量
	// required : true
	Amount float64 `json:"amount" validate:"required"`
}

// 预算提币各项费用
// swagger:model EstimateWithdrawDataInfo
type EstimateWithdrawDataInfo struct {
	// 提币数量
	Amount float64 `json:"amount"`
	// 提币手续费
	HandingFee float64 `json:"handingFee"`
	// 提币实际到账数量
	ReceivedAmount float64 `json:"receivedAmount"`
	// 总扣除费用
	TotalAmount float64 `json:"totalAmount"`
}

// 预算提币各项费用响应体
// swagger:model EstimateWithdrawResp
type EstimateWithdrawResp struct {
	BaseDataInfo
	Data EstimateWithdrawDataInfo `json:"data"`
}

// 订单详情
// swagger:model OrderInfo
type OrderInfo struct {
	// Id
	Id uint64 `json:"id"`
	// 交易ID
	TransactionId string `json:"transactionId"`
	// 订单类型: deposit=充值订单；withdraw=提现订单
	Type string `json:"type"`
	// 币数量
	Num float64 `json:"coinAmount"`
	// 创建时间
	CreateAt int64 `json:"createAt"`
	// 状态: 1=审核中；2=待处理；3=处理中；4=交易完成；5=交易失败；
	Status uint32 `json:"status"`
	// 状态描述
	StatusDesc string `json:"statusDesc"`
	// 汇入地址
	ToAddress string `json:"toAddress"`
	// 网络
	Network string `json:"network"`
	// 手续费
	HandlingFee float64 `json:"handlingFee"`
}

//	订单详情请求体
//
// swagger:model FindOrderReq
type FindOrderReq struct {
	// Id
	// required : true
	Id uint64 `json:"id" validate:"required"`
}

//	订单详情响应体
//
// swagger:model FindOrderResp
type FindOrderResp struct {
	BaseDataInfo
	// 订单详情
	Data OrderInfo `json:"data"`
}

// 订单列表请求体
// swagger:model ListOrderReq
type ListOrderReq struct {
	PageInfo
	// 订单类型: deposit=充值订单；withdraw=提现订单
	// required : true
	Type string `json:"type" validate:"required,oneof=deposit withdraw"`
}

// 订单列表响应体
// swagger:model ListOrderResp
type ListOrderResp struct {
	BaseDataInfo
	// 订单列表数据
	Data ListOrderInfo `json:"data"`
}

// 订单列表数据
// swagger:model ListOrderInfo
type ListOrderInfo struct {
	BaseListInfo
	// 订单列表
	Data []OrderInfo `json:"data"`
}

// 兑换请求体
// swagger:model ExchangeReq
type ExchangeReq struct {
	// type | 兑换类型：1=币兑羊；2=羊兑币
	// required : true
	Type uint32 `json:"type" validate:"required,oneof=1 2"`
	// coin amount| 币数量
	// required : true
	// min length : 1
	CoinAmount uint32 `json:"coinAmount" validate:"required,min=1"`
	// lamb amount | 羊数量
	// required : true
	// min length : 10
	LampAmount uint32 `json:"lambAmount" validate:"required,min=10"`
}

// 兑换响应体
// swagger:model ExchangeResp
type ExchangeResp struct {
	BaseDataInfo
	// Data ｜ 兑换记录ID
	Data uint64 `json:"data"`
}

// 兑换记录详情
// swagger:model ExchangeInfo
type ExchangeInfo struct {
	// 兑换记录ID
	Id uint64 `json:"id"`
	// 交易ID
	TransactionId string `json:"transactionId"`
	// 兑换类型：1=币兑羊；2=羊兑币
	Type uint32 `json:"type"`
	// 类型描述
	TypeDesc string `json:"typeDesc"`
	// 币数量
	CoinAmount uint32 `json:"coinAmount"`
	// 羊数量
	LampAmount uint32 `json:"lambAmount"`
	// 创建时间
	CreateAt int64 `json:"createAt"`
	// 状态：1=完成
	Status uint32 `json:"status"`
	// 状态描述
	StatusDesc string `json:"statusDesc"`
}

// 兑换记录详情请求体
// swagger:model FindExchangeReq
type FindExchangeReq struct {
	// Id
	Id uint64 `json:"id"`
}

// 兑换记录详情响应体
// swagger:model FindExchangeResp
type FindExchangeResp struct {
	BaseDataInfo
	// 兑换记录详情
	Data ExchangeInfo `json:"data"`
}

// 兑换记录列表请求体
// swagger:model ListExchangeReq
type ListExchangeReq struct {
	PageInfo
}

// 兑换记录列表响应体
// swagger:model ListExchangeResp
type ListExchangeResp struct {
	BaseDataInfo
	// 兑换记录列表响应体数据
	Data ListExchangeInfo `json:"data"`
}

// 兑换记录列表响应体数据
// swagger:model ListExchangeInfo
type ListExchangeInfo struct {
	BaseListInfo
	// 兑换记录列表
	Data []ExchangeInfo `json:"data"`
}

// 奖励记录信息
// swagger:model RewardInfo
type RewardInfo struct {
	// 奖励记录ID
	Id uint64 `json:"id"`
	// 奖励对象ID
	ToId uint64 `json:"toId"`
	// 贡献者ID
	ContributorId uint64 `json:"contributorId"`
	// 贡献者邮箱
	ContributorEmail string `json:"contributorEmail"`
	// 贡献者等级
	ContributorLevel uint32 `json:"contributorLevel"`
	// 创建时间
	CreateAt int64 `json:"createAt"`
	// 状态：1=完成
	Status uint32 `json:"status"`
	// 奖励描述
	StatusDesc string `json:"statusDesc"`
	// 奖励数量
	Num float32 `json:"num"`
	// 备注
	Remark string `json:"remark"`
}

// 奖励记录详情请求体
// swagger:model FindRewardReq
type FindRewardReq struct {
	// Id
	Id uint64 `json:"id"`
}

// 奖励记录详情响应体
// swagger:model FindRewardResp
type FindRewardResp struct {
	BaseDataInfo
	// 兑换记录详情
	Data RewardInfo `json:"data"`
}

// 奖励记录列表请求体
// swagger:model ListRewardReq
type ListRewardReq struct {
	PageInfo
	// 贡献者等级
	ContributorLevel uint32 `json:"contributorLevel"`
}

// 奖励记录列表响应体
// swagger:model ListRewardResp
type ListRewardResp struct {
	BaseDataInfo
	// 奖励记录列表响应体数据
	Data ListRewardInfo `json:"data"`
}

// 奖励记录列表响应体数据
// swagger:model ListRewardInfo
type ListRewardInfo struct {
	BaseListInfo
	// 兑换记录列表
	Data []RewardInfo `json:"data"`
}

// 投注请求体
// swagger:model InvestReq
type InvestReq struct {
	// 当前轮数
	// required : true
	RoundId uint64 `json:"roundId" validate:"required"`
	// 羊圈号码
	// required : true
	FoldNo uint32 `json:"foldNo" validate:"required,oneof=1 2 3 4 5 6 7 8"`
	// 投注数量
	// required : true
	LambNum uint32 `json:"lambNum" validate:"required,oneof=1 5 10 20 50 100"`
}

// 羊圈详情
// swagger:model FoldInfo
type FoldInfo struct {
	// 1号羊圈投注数
	Fold1 FoldDetail `json:"fold1"`
	// 2号羊圈投注数
	Fold2 FoldDetail `json:"fold2"`
	// 3号羊圈投注数
	Fold3 FoldDetail `json:"fold3"`
	// 4号羊圈投注数
	Fold4 FoldDetail `json:"fold4"`
	// 5号羊圈投注数
	Fold5 FoldDetail `json:"fold5"`
	// 6号羊圈投注数
	Fold6 FoldDetail `json:"fold6"`
	// 7号羊圈投注数
	Fold7 FoldDetail `json:"fold7"`
	// 8号羊圈投注数
	Fold8 FoldDetail `json:"fold8"`
}

// 当前玩家投注详情
// swagger:model PlayerInvestInfo
type PlayerInvestInfo struct {
	// 1号羊圈投注数
	Fold1 FoldDetail `json:"fold1"`
	// 2号羊圈投注数
	Fold2 FoldDetail `json:"fold2"`
	// 3号羊圈投注数
	Fold3 FoldDetail `json:"fold3"`
	// 4号羊圈投注数
	Fold4 FoldDetail `json:"fold4"`
	// 5号羊圈投注数
	Fold5 FoldDetail `json:"fold5"`
	// 6号羊圈投注数
	Fold6 FoldDetail `json:"fold6"`
	// 7号羊圈投注数
	Fold7 FoldDetail `json:"fold7"`
	// 8号羊圈投注数
	Fold8 FoldDetail `json:"fold8"`
}

// 羊圈详情
type FoldDetail struct {
	// 羊圈号码
	FoldNo uint32 `json:"foldNo"`
	// 投注数量
	LambNum uint32 `json:"lambNum"`
}

// 开奖结果详情
// swagger:model ResultInfo
type ResultInfo struct {
	// 中奖羊圈号码
	FoldNum uint32 `json:"foldNum"`
	// 盈亏数量
	ProfitAndLoss float32 `json:"profitAndLoss"`
}

// 游戏回合数据
// swagger:model RoundInfo
type RoundInfo struct {
	// 回合ID
	Id uint64 `json:"id"`
	// 羊圈信息
	FoldInfo FoldInfo `json:"foldInfo"`
	// 当前玩家投注详情
	PlayerInvestInfo PlayerInvestInfo `json:"playerInvestInfo"`
	// 回合开始时间（包括倒计时）
	StartAt int64 `json:"startAt"`
	// 回合开奖时间
	OpenAt int64 `json:"openAt"`
	// 回合结束时间（包括倒计时）
	EndAt int64 `json:"endAt"`
	// 状态: 1-投注中 2-开奖中 3-已结束
	Status uint32 `json:"status"`
	// 开奖结果详情
	ResultInfo ResultInfo `json:"resultInfo"`
}

// 盘口数据请求
// swagger:model RoundReq
type RoundReq struct {
	// 请求的回合ID，默认返回当前回合数据
	Id *uint64 `json:"id,optional"`
}

// 盘口数据响应
// swagger:model RoundResp
type RoundResp struct {
	BaseDataInfo
	Data RoundInfo `json:"data"`
}
